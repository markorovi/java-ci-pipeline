<project name="Calculadora" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="test" location="test/Scanner"/>
    <property name="lib" location="dist/lib"/>
    <property name="source.test.dir" location="test/Scanner" />
    <property name="output.test.dir" location="test" />

    <path id="classpath">
        <pathelement location="${build}" />
        <pathelement location="${lib}/hamcrest-core-1.3.jar" />
        <pathelement location="${lib}/junit-4.11.jar" />
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}"/>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/Calculator.jar" basedir="${build}"/>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="test"
            description="test">
        <junit printsummary="on">
            <test name="com.edu.BaseTest.MyTest"/>
            <classpath>
                <pathelement location="${build}"/>
                <pathelement location="${lib}/junit-4.11.jar" />
            </classpath>

            <batchtest fork="yes" todir="${output.test.dir}">
                <!-- The fileset element specifies which tests to run. -->
                <!-- There are many different ways to specify filesets, this
                     is just one example. -->
                <fileset dir="${source.test.dir}" includes="**/CalculatorTest.java"/>
                <fileset dir="${source.test.dir}" includes="**/ScanTest.java"/>
            </batchtest>
        </junit>
        <javac srcdir="${test}" destdir="${build}" classpathref="classpath" />
    </target>
</project>